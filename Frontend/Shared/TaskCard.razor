@using Frontend.Services
@using Frontend.Shared
@using Newtonsoft.Json








<div class="p-3 m-2">
    <div>
        @foreach (var task in ToDoList!)
        {
            string headerColorClass = task.IsCompleted ? "bg-success" : "bg-danger";
            string isCompleteContent = task.IsCompleted ? "Complete" : " Incomplete";
            string truncatedDescription = task.Description.Length > 100 ? task.Description.Substring(0, 100) + "..." : task.Description;

            <div class="card p-2 m-2 mt-5">
                <div class="d-flex w-100 justify-content-between card-header @headerColorClass">

                    <h2>@task.Title</h2>
                    <button class="text-white p-2 text-center fs-4 btn border btn-isCompleteC">
                        @isCompleteContent
                    </button>
                </div>

                <div class="card-body">
                    <p>@truncatedDescription</p>
                </div>

                <div class="card-footer">
                    <strong>@task.DateCreated</strong>
                </div>
            </div>
        }
    </div>

</div>
@* }
 *@

@code {
    public List<ToDoDTO>? ToDoList { get; set; }

    [Inject]
    public IRequestService? Service { get; set; }

    [Parameter]
    public string? SearchTitle { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        ToDoList ??= new();

        var response = await Service!.GetAllAsync("Tasks");
        if (string.IsNullOrEmpty(response))
        {
            ToDoList = JsonConvert.DeserializeObject<List<ToDoDTO>>(response);
        }

    }


}